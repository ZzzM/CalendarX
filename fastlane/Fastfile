default_platform(:mac)

platform :mac do
  
  before_all do
    ENV["APP_NAME"] = "CalendarX"
    ENV["APP_VERSION"] = last_git_tag
    ENV["APP_BUILD"] = "#{number_of_commits}"
    ENV["SYS_MIN_VERSION"] = "11.0.0"
    ENV["BUILD_PATH"] = "./build"
    ENV["LOG_PATH"] = ENV["BUILD_PATH"] + "/TMP.md"
    ENV["DMG_PATH"] = ENV["BUILD_PATH"] + "/#{ENV["APP_NAME"]}.dmg"
  end

  lane :create_dmg do
    setup
    build
    clean
    sh "cd .. && zsh ./scripts/create_dmg.sh"
  end

  private_lane :setup do

    increment_build_number_in_xcodeproj(build_number: ENV["APP_BUILD"])
    increment_version_number_in_xcodeproj(version_number: ENV["APP_VERSION"])
  
  end

  private_lane :build do 

    build_mac_app(
      clean: true,
      silent: true,
      skip_codesigning: true,
      export_method: "mac-application",
      output_directory: ENV["BUILD_PATH"])
      
  end

  private_lane :clean do
    sh "rm -vfr ~/Library/Developer/Xcode/Archives/*"
  end


  # TEST
  lane :test do |options|
    setup
    build
    clean
    case UI.input("do you want to release app? (yes / no)")
    when "yes"
       sh "cd .. && zsh ./scripts/test.sh release"
    else
       sh "cd .. && zsh ./scripts/test.sh debug"
    end
  end
  
  lane :release do |options|

    name = ENV["APP_NAME"]
    tag = ENV["APP_VERSION"]

    repo = options[:repo]
    token = options[:token]

    log_path = "../" + ENV["LOG_PATH"]
    dmg_path = ENV["DMG_PATH"] 

    github_release = set_github_release(
      repository_name: repo,
      api_token: token,
      name: tag,
      tag_name: tag,
      description: (File.read(log_path) rescue "No changelog provided"),
      upload_assets: [dmg_path])
      
  end

  lane :show do
    # msg = File.read("../TEST.md")

    increment_build_number_in_xcodeproj(build_number: ENV["APP_BUILD"])
    increment_version_number_in_xcodeproj(version_number: "2.3.7")
  end


end
